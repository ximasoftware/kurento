name: "server module (child)"

on:
  # Triggered from other workflows.
  workflow_call:
    inputs:
      jobDistros:
        description: "jobDistros: List of Ubuntu codenames to build for"
        required: true
        # There is no `list` type, so use a raw JSON array and `fromJSON()`.
        # Example: '["xenial", "bionic", "focal"]'
        type: "string"
        default: '["noble"]'
      jobGitName:
        description: "jobGitName: Non-default git branch or tag that should be checked out, if it exists"
        required: false
        type: "string"
        default: ""
      jobGitNameFallback:
        description: "jobGitNameFallback: Non-default git branch or tag that should be checked out, if `jobGitName` does not exist"
        required: false
        type: "string"
        default: ""
      jobRelease:
        description: "jobRelease: Enable to build release versions; disable for development builds"
        required: false
        type: "boolean"
        default: false
      directory:
        description: "directory: Working directory for the job execution"
        required: true
        type: "string"
        default: "./"
      copyArtifacts:
        description: "copyArtifacts: Whether artifacts from previous jobs should be copied or not"
        required: false
        type: "boolean"
        default: true
      runnerGroup:
        description: "runnerGroup: Set of runners where the workflow jobs should be run"
        required: false
        type: "string"
        default: ""
      artifactName:
        description: "Name of the artifact to be uploaded"
        required: true
        type: "string"


defaults:
  run:
    shell: "bash --noprofile --norc -o errexit -o errtrace -o pipefail -o nounset -o xtrace {0}"

jobs:
  build:
    runs-on: ["self-hosted", "${{ inputs.runnerGroup }}"]
    strategy:
      matrix:
        jobDistro: ${{ fromJSON(inputs.jobDistros) }}
    timeout-minutes: 30
    steps:
      - name: "Check for non-default git ref"
        id: "git-ref"
        run: |
          if [[ -n "${{ inputs.jobGitName }}" ]]; then
            echo "value=${{ inputs.jobGitName }}" >>$GITHUB_OUTPUT
          else
            echo "value=main" >>$GITHUB_OUTPUT
          fi

      # Action: https://github.com/actions/checkout
      - name: "Checkout"
        uses: "actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11" # v4.1.1
        with:
          ref: "${{ steps.git-ref.outputs.value }}"

      - name: "Configure the environment for ci-scripts/"
        working-directory: "ci-scripts/"
        run: |
          echo "$PWD" >>$GITHUB_PATH
          echo "KURENTO_SCRIPTS_HOME=$PWD" >>$GITHUB_ENV
          echo "JOB_TIMESTAMP=$(date --utc +%Y%m%d%H%M%S)" >>$GITHUB_ENV

      # Action: https://github.com/actions/download-artifact
      - name: "Copy artifacts from previous jobs"
        id: "copy-artifacts"
        if: ${{ inputs.copyArtifacts }}
        uses: "actions/download-artifact@v4"
        with:
          path: "artifacts/"

      - name: "Run job script"
        env:
          JOB_DISTRO: "${{ matrix.jobDistro }}"
          JOB_GIT_NAME: "${{ inputs.jobGitName }}"
          JOB_GIT_NAME_FALLBACK: "${{ inputs.jobGitNameFallback }}"
          JOB_RELEASE: "${{ inputs.jobRelease }}"
          APT_PROXY_URL: "${{ vars.APT_PROXY_URL }}"
          DISABLE_APT_PROXY: "true"
          INSTALL_PATH: "${{ steps.copy-artifacts.outputs.download-path }}"
        working-directory: "${{ inputs.directory }}"
        run: "ci_job_package_debian.sh"

      # Action: https://github.com/actions/upload-artifact
      - name: "Archive the artifacts"
        uses: "actions/upload-artifact@v4"
        with:
          name: "${{ inputs.artifactName }}"
          path: "${{ inputs.directory }}/*.*deb"
